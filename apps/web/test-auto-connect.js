/**
 * Test script ƒë·ªÉ m√¥ ph·ªèng flow auto-connect t·ª´ COW_N sang SWAP
 * 
 * Flow:
 * 1. User login v√†o COW_N (localhost:3001)
 * 2. COW_N t·∫°o session v√† set cookie
 * 3. User click "Open SWAP" -> redirect sang localhost:3000/swap
 * 4. SWAP auto-connect d·ª±a tr√™n session cookie
 */

console.log('üß™ [Test Auto-Connect] Starting test flow...')

// Function ƒë·ªÉ test c√°c b∆∞·ªõc
async function testAutoConnectFlow() {
  console.log('\n=== STEP 1: Ki·ªÉm tra COW_N Health ===')
  
  try {
    const cowHealthResponse = await fetch('http://localhost:3001/api/health', {
      method: 'GET'
    })
    
    if (cowHealthResponse.ok) {
      console.log('‚úÖ COW_N server is running')
    } else {
      throw new Error('COW_N not responding')
    }
  } catch (error) {
    console.error('‚ùå COW_N server not accessible:', error.message)
    console.log('üîß Make sure COW_N is running on port 3001')
    return
  }

  console.log('\n=== STEP 2: Ki·ªÉm tra SWAP Health ===')
  
  try {
    const swapHealthResponse = await fetch('http://localhost:3000/api/auth/private-key', {
      method: 'GET'
    })
    
    // Expect 401 v√¨ ch∆∞a c√≥ cookie
    if (swapHealthResponse.status === 401) {
      console.log('‚úÖ SWAP server is running (401 as expected without cookie)')
    } else {
      console.log('‚ö†Ô∏è SWAP server responding with unexpected status:', swapHealthResponse.status)
    }
  } catch (error) {
    console.error('‚ùå SWAP server not accessible:', error.message)
    console.log('üîß Make sure SWAP is running on port 3000')
    return
  }

  console.log('\n=== STEP 3: Manual Test Instructions ===')
  console.log(`
üöÄ Manual test steps:

1. M·ªü browser v√† v√†o: http://localhost:3001
2. Login v·ªõi passkey/social login
3. Sau khi login th√†nh c√¥ng, click "Open SWAP" ho·∫∑c navigate t·ªõi: http://localhost:3000/swap
4. Quan s√°t console logs trong browser ƒë·ªÉ xem auto-connect flow
5. Check wallet status indicator ·ªü g√≥c ph·∫£i m√†n h√¨nh

Expected behavior:
- App s·∫Ω load trong ~1-2 ph√∫t (do bundle size l·ªõn)
- Sau khi load xong, AutoConnectPrivateKey s·∫Ω:
  ‚úì Check app readiness
  ‚úì Debug private key data
  ‚úì Attempt connection with retry logic
  ‚úì Connect to COW wallet if session valid

Debug info s·∫Ω hi·ªÉn th·ªã:
- Cookie status (cow_auth_token)
- API status (/api/auth/private-key)
- Private key details
- Connection attempts and results
`)

  console.log('\n=== STEP 4: Browser Test URLs ===')
  console.log('COW_N: http://localhost:3001')
  console.log('SWAP:  http://localhost:3000/swap')
  console.log('SWAP API Test: http://localhost:3000/api/auth/private-key')
  
  console.log('\nüß™ [Test Auto-Connect] Test setup complete!')
}

// Ch·∫°y test
testAutoConnectFlow().catch(console.error)
